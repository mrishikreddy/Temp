import string

def create_playfair_matrix(key):
    key = ''.join(sorted(set(key), key=lambda x: key.index(x)))
    key = key.replace('j', 'i')  # Treat 'j' as 'i'
    
    alphabet = 'abcdefghiklmnopqrstuvwxyz'  # Exclude 'j' from the alphabet
    matrix = key + ''.join([char for char in alphabet if char not in key])

    matrix = [matrix[i:i + 5] for i in range(0, 25, 5)]  
    return matrix


def format_plaintext(plaintext):
    plaintext = plaintext.lower().replace('j', 'i')  
    formatted_text = []
    
    i = 0
    while i < len(plaintext):
        if i + 1 < len(plaintext) and plaintext[i] == plaintext[i + 1]:
            formatted_text.append(plaintext[i] + 'x')
            i += 1
        else:
            if i + 1 < len(plaintext):
                formatted_text.append(plaintext[i] + plaintext[i + 1])
                i += 2
            else:
                formatted_text.append(plaintext[i] + 'x')  # Add 'x' if odd length
                i += 1
    return formatted_text


def find_position(matrix, char):
    for i in range(5):
        for j in range(5):
            if matrix[i][j] == char:
                return i, j


def encrypt(plaintext, matrix):
    formatted_text = format_plaintext(plaintext)
    ciphertext = []
    
    for pair in formatted_text:
        row1, col1 = find_position(matrix, pair[0])
        row2, col2 = find_position(matrix, pair[1])
        
        if row1 == row2:
            ciphertext.append(matrix[row1][(col1 + 1) % 5])
            ciphertext.append(matrix[row2][(col2 + 1) % 5])
        elif col1 == col2:
            ciphertext.append(matrix[(row1 + 1) % 5][col1])
            ciphertext.append(matrix[(row2 + 1) % 5][col2])
        else:
            ciphertext.append(matrix[row1][col2])
            ciphertext.append(matrix[row2][col1])
    
    return ''.join(ciphertext)


def decrypt(ciphertext, matrix):
    formatted_text = [ciphertext[i:i+2] for i in range(0, len(ciphertext), 2)]
    plaintext = []
    
    for pair in formatted_text:
        row1, col1 = find_position(matrix, pair[0])
        row2, col2 = find_position(matrix, pair[1])
        
        if row1 == row2:
            plaintext.append(matrix[row1][(col1 - 1) % 5])
            plaintext.append(matrix[row2][(col2 - 1) % 5])
        elif col1 == col2:
            plaintext.append(matrix[(row1 - 1) % 5][col1])
            plaintext.append(matrix[(row2 - 1) % 5][col2])
        else:
            plaintext.append(matrix[row1][col2])
            plaintext.append(matrix[row2][col1])
    
    return ''.join(plaintext)


key = "cryptography"
plaintext = "hello"


matrix = create_playfair_matrix(key)


ciphertext = encrypt(plaintext, matrix)
print("Ciphertext:", ciphertext)


decrypted_text = decrypt(ciphertext, matrix)
print("Decrypted Text:", decrypted_text)
